{"version":3,"sources":["src/index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","_typeof","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","Array","from","test","len","arr2","_i","_s","_e","_x","_r","_arr","_n","_d","isArray","todos","users","toDoList","document","getElementById","userSelect","form","querySelector","printToDo","_ref","id","userId","title","completed","li","createElement","className","dataset","innerHTML","concat","find","u","getUserName","status","checked","addEventListener","handleTodoChange","close","handleClose","prepend","append","removeTodo","todoId","filter","todo","removeEventListener","remove","alertError","alert","message","_x3","_x4","_toggleTodoComplete","toggleTodoComplete","parentElement","_x5","_deleteTodo","deleteTodo","getAllToDos","_getAllToDos","_callee","response","data","_callee$","_context","fetch","json","t0","getAllUsers","_getAllUsers","_callee2","_callee2$","_context2","_createTodo","_callee3","_callee3$","_context3","body","JSON","stringify","headers","_callee4","_callee4$","_context4","ok","_callee5","_callee5$","_context5","all","_values","user","option","innerText","createUserOption","event","preventDefault","_x2","createTodo","Number"],"mappings":"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","file":"src.aceb378f.js","sourceRoot":"..","sourcesContent":["(function () {\n    //Globals\n    let todos = [];\n    let users = [];\n    const toDoList = document.getElementById('todo-list');\n    const userSelect = document.getElementById('user-todo');\n    const form = document.querySelector('form');\n\n    //Atach events\n    document.addEventListener('DOMContentLoaded', initApp);\n    form.addEventListener('submit', handleSubmit);\n\n    //Basic logic\n    function getUserName(userId) {\n        const user = users.find((u) => u.id === userId);\n        return user.name;\n    }\n\n    function printToDo({ id, userId, title, completed }) {\n        const li = document.createElement('li');\n        li.className = 'todo-item';\n        li.dataset.id = id;\n        li.innerHTML = `<span>${title} <i>by</i> <b>${getUserName(\n            userId\n        )}</b></span>`;\n\n        const status = document.createElement('input');\n        status.type = 'checkbox';\n        status.checked = completed;\n        status.addEventListener('change', handleTodoChange);\n\n        const close = document.createElement('span');\n        close.innerHTML = '&times;';\n        close.className = 'close';\n        close.addEventListener('click', handleClose);\n\n        toDoList.prepend(li);\n        li.prepend(status);\n        li.append(close);\n    }\n\n    function createUserOption(user) {\n        const option = document.createElement('option');\n        option.value = user.id;\n        option.innerText = user.name;\n\n        userSelect.append(option);\n    }\n\n    function removeTodo(todoId) {\n        todos = todos.filter((todo) => todo.id !== todoId);\n        const todo = toDoList.querySelector(`[data-id = \"${todoId}\"]`);\n        todo.querySelector('input').removeEventListener(\n            'change',\n            handleTodoChange\n        );\n        todo.querySelector('.close').removeEventListener('click', handleClose);\n        todo.remove();\n    }\n    function alertError(error) {\n        alert(error.message);\n    }\n\n    //Event logic\n    function initApp() {\n        Promise.all([getAllToDos(), getAllUsers()]).then((values) => {\n            [todos, users] = values;\n            //Отправить в разметку\n            todos.forEach((todo) => printToDo(todo));\n            users.forEach((user) => createUserOption(user));\n        });\n    }\n    function handleSubmit(event) {\n        event.preventDefault();\n        createTodo({\n            userId: Number(form.user.value),\n            title: form.todo.value,\n            completed: false,\n        });\n    }\n    function handleTodoChange() {\n        const todoId = this.parentElement.dataset.id;\n        const completed = this.checked;\n        toggleTodoComplete(todoId, completed);\n    }\n    function handleClose() {\n        const todoId = this.parentElement.dataset.id;\n        deleteTodo(todoId);\n    }\n\n    //Async logic\n    async function getAllToDos() {\n        try {\n            const response = await fetch(\n                'https://jsonplaceholder.typicode.com/todos?_limit=100'\n            );\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            alertError(error);\n        }\n    }\n\n    async function getAllUsers() {\n        try {\n            const response = await fetch(\n                'https://jsonplaceholder.typicode.com/users'\n            );\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            alertError(error);\n        }\n    }\n\n    async function createTodo(todo) {\n        try {\n            const response = await fetch(\n                'https://jsonplaceholder.typicode.com/todos',\n                {\n                    method: 'POST',\n                    body: JSON.stringify(todo),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n            const newTOdo = await response.json();\n            printToDo(newTOdo);\n        } catch (error) {\n            alertError(error);\n        }\n    }\n\n    async function toggleTodoComplete(todoId, completed) {\n        try {\n            const response = await fetch(\n                `https://jsonplaceholder.typicode.com/todos/${todoId}`,\n                {\n                    method: 'PATCH',\n                    body: JSON.stringify({ completed: completed }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n            if (!response.ok) {\n                throw new Error(\n                    'Failed to connect with server! Please try later!'\n                );\n            }\n        } catch (error) {\n            alertError(error);\n        }\n    }\n\n    async function deleteTodo(todoId) {\n        try {\n            const response = await fetch(\n                `https://jsonplaceholder.typicode.com/todos/${todoId}`,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            );\n            if (response.ok) {\n                removeTodo(todoId);\n            } else {\n                throw new Error(\n                    'Failed to connect with server! Please try later!'\n                );\n            }\n        } catch (error) {\n            alertError(error);\n        }\n    }\n})();\n"]}